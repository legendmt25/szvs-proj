/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef SCREEN2VIEWBASE_HPP
#define SCREEN2VIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/screen2_screen/Screen2Presenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/AnimatedImage.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/widgets/graph/GraphWrapAndOverwrite.hpp>
#include <touchgfx/widgets/graph/GraphElements.hpp>
#include <touchgfx/widgets/canvas/PainterRGB565.hpp>
#include <touchgfx/containers/buttons/Buttons.hpp>

class Screen2ViewBase : public touchgfx::View<Screen2Presenter>
{
public:
    Screen2ViewBase();
    virtual ~Screen2ViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::AnimatedImage animatedImage1;
    touchgfx::TextAreaWithOneWildcard minTemperatureTextArea;
    touchgfx::TextAreaWithOneWildcard temperatureTextArea;
    touchgfx::TextAreaWithOneWildcard maxTemperatureTextArea;
    touchgfx::GraphWrapAndOverwrite<10> temperatureGraph;
    touchgfx::GraphElementLine temperatureGraphLine1;
    touchgfx::PainterRGB565 temperatureGraphLine1Painter;
    touchgfx::TextButtonStyle< touchgfx::ClickButtonTrigger >  backButton;

    /*
     * Wildcard Buffers
     */
    static const uint16_t MINTEMPERATURETEXTAREA_SIZE = 4;
    touchgfx::Unicode::UnicodeChar minTemperatureTextAreaBuffer[MINTEMPERATURETEXTAREA_SIZE];
    static const uint16_t TEMPERATURETEXTAREA_SIZE = 4;
    touchgfx::Unicode::UnicodeChar temperatureTextAreaBuffer[TEMPERATURETEXTAREA_SIZE];
    static const uint16_t MAXTEMPERATURETEXTAREA_SIZE = 4;
    touchgfx::Unicode::UnicodeChar maxTemperatureTextAreaBuffer[MAXTEMPERATURETEXTAREA_SIZE];

private:

    /*
     * Canvas Buffer Size
     */
    static const uint32_t CANVAS_BUFFER_SIZE = 7200;
    uint8_t canvasBuffer[CANVAS_BUFFER_SIZE];

    /*
     * Callback Declarations
     */
    touchgfx::Callback<Screen2ViewBase, const touchgfx::AbstractButtonContainer&> flexButtonCallback;

    /*
     * Callback Handler Declarations
     */
    void flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src);

};

#endif // SCREEN2VIEWBASE_HPP
