/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef SCREEN1VIEWBASE_HPP
#define SCREEN1VIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/screen1_screen/Screen1Presenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/AnimatedImage.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/containers/buttons/Buttons.hpp>

class Screen1ViewBase : public touchgfx::View<Screen1Presenter>
{
public:
    Screen1ViewBase();
    virtual ~Screen1ViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::AnimatedImage animatedImage1;
    touchgfx::TextAreaWithOneWildcard humidityTextArea;
    touchgfx::TextAreaWithOneWildcard temperatureTextArea;
    touchgfx::TextButtonStyle< touchgfx::ClickButtonTrigger >  temperatureButton;

    /*
     * Wildcard Buffers
     */
    static const uint16_t HUMIDITYTEXTAREA_SIZE = 4;
    touchgfx::Unicode::UnicodeChar humidityTextAreaBuffer[HUMIDITYTEXTAREA_SIZE];
    static const uint16_t TEMPERATURETEXTAREA_SIZE = 4;
    touchgfx::Unicode::UnicodeChar temperatureTextAreaBuffer[TEMPERATURETEXTAREA_SIZE];

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<Screen1ViewBase, const touchgfx::AbstractButtonContainer&> flexButtonCallback;

    /*
     * Callback Handler Declarations
     */
    void flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src);

};

#endif // SCREEN1VIEWBASE_HPP
